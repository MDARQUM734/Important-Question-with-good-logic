class Solution {
    public ListNode rotateRight(ListNode head, int k) {
       if (head == null || head.next == null || k == 0) return head;

    //  Find the length and tail
    ListNode curr = head;
    int length = 1;
    while (curr.next != null) {
        curr = curr.next;
        length++;
    }

    // isko circular banadenge
    curr.next = head;

    // Find new tail: (length - k % length - 1)th node
    k = k % length;
    int stepsToNewTail = length - k;
    ListNode newTail = head;
    for (int i = 0; i < stepsToNewTail - 1; i++) {
        newTail = newTail.next;
    }

    // ek new node banakar newtail ka next usko assign karke newtail ka next null kardenge Break the circle
    ListNode newHead = newTail.next;
    newTail.next = null;

    return newHead;
